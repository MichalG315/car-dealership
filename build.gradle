plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyVersion}"
    id 'org.openapi.generator' version "${openapiGeneratorVersion}"
}

group = 'pl.zajavka'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity6', version: '3.1.2.RELEASE'

    // db
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'

    // api
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    implementation "org.openapitools:jackson-databind-nullable:${jacksonDatabindNullableVersion}"
    implementation "javax.annotation:javax.annotation-api:${javaxAnnotationApiVersion}"
    implementation "io.swagger:swagger-annotations:${swaggerAnnotationsVersion}"
    implementation "com.google.code.findbugs:jsr305:${jsr305Version}"

    // annotation
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    //test
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "org.slf4j:slf4j-api:${wiremockSlf4jVersion}"
    testImplementation "com.github.tomakehurst:wiremock-standalone:${wiremockVersion}"
}

openApiGenerate {
    generatorName = "java"
    library = "webclient"
    configOptions = [
            serializableModel   : "true",
            dateLibrary         : "java8",
            serializationLibrary: "jackson"
    ]
//     outputDir = "$buildDir/generated-sources/openapi".toString()
    outputDir = project.layout.buildDirectory.dir("generated-sources/openapi").get().asFile.path
    inputSpec = "$rootDir/src/main/resources/contracts/cepik-1.1.3.json".toString()
    apiPackage = "pl.zajavka.infrastructure.cepik.api"
    modelPackage = "pl.zajavka.infrastructure.cepik.model"
}

sourceSets {
    main {
        java.srcDirs += "$buildDir/generated-sources/openapi/src/main/java"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava.dependsOn tasks.openApiGenerate
compileJava.options.encoding = 'UTF-8'

// http://www.cepik.gov.pl/interfejs-dla-cepik
// https://api.cepik.gov.pl/doc
// https://openapi-generator.tech/docs/plugins/
// https://openapi-generator.tech/docs/generators/java/

bootJar {
    archiveFileName = "carDealershipProject.${archiveExtension.get()}"
}
jar{
    enabled = false
}